ud1) Monthly customer report 
solution ->

SELECT MONTH(created_at) as month, COUNT(DISTINCT user_id) as num_customers,
COUNT(t.id) as num_orders, SUM(t.quantity*p.price) as order_amt
From transactions t left join products p on t.product_id = p.id
WHERE YEAR(created_at) ='2020'
GROUP BY MONTH(created_at);

2) Comments Histogram
solution ->

with cte as (
    select users.id, count(comments.user_id ) as comment_count
    from users left join comments  on users.id = comments.user_id
    and comments.created_at between '2020-01-01' AND '2020-01-31'
    group by 1)

select comment_count, count(*) as frequency
from cte
group by 1

3) Comment Upvotes

select 
    u.id,
    username,
    sum(case when is_upvote then 1 else 0 end) as upvotes
from comments c 
join users u on c.user_id = u.id
join comment_votes cv on c.id = cv.comment_id

where extract(year from c.created_at) = 2020
and not c.is_deleted
and c.user_id != cv.user_id

group by 1, 2

order by 3 desc
limit 3

4) Project Pairs

select 	
pe.end_date as date ,
pe.title as project_title_end,
p.title as project_title_start
from projects pe join projects p
on date(p.start_date) = date(pe.end_date)

5)Repeat Job Postings

with job_post as (
    select user_id,
    count(distinct job_id) as n_jobs,
    count(distinct id) as n_posts
    from job_postings
    group by user_id
)

select 
sum(case when n_jobs=n_posts then 1 else 0 end ) as single_post,
sum(case when n_jobs!=n_posts then 1 else 0 end) as multiple_posts
from job_post;

6) overbudget projects

with cte as (select p.title,
    budget,
     (SUM(salary) * DATEDIFF(end_date, start_date)/365) as sal     
from employee_projects ep 
join employees e on ep.employee_id = e.id 
join projects p on ep.project_id = p.id
group by 1)

select title,
    (case when budget >= sal then 'within budget' else 'overbudget' end) as project_forecast
from cte 

7) Closest SAT Scores

select s.student as one_student 	,
sc.student as other_student	,
abs(sc.score- s.score) as score_diff
from scores s inner join scores sc 
on s.student != sc.student
AND s.id < sc.id
ORDER BY 3 ASC, 1 ASC
LIMIT 1
